@page "/register"
@using System.ComponentModel.DataAnnotations

<h3 class="text-center mt-4">Create an Account</h3>

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card shadow">
                <div class="card-body">
                    <EditForm Model="@registrationModel" OnValidSubmit="HandleRegistration">
                        <DataAnnotationsValidator />
                        <ValidationSummary />

                        <div class="mb-3">
                            <label for="Name" class="form-label">Full Name</label>
                            <InputText id="Name" class="form-control" @bind-Value="registrationModel.Name" />
                        </div>

                        <div class="mb-3">
                            <label for="Email" class="form-label">Email</label>
                            <InputText id="Email" class="form-control" @bind-Value="registrationModel.Email" />
                        </div>

                        <div class="mb-3">
                            <label for="Password" class="form-label">Password</label>
                            <InputText id="Password" class="form-control" @bind-Value="registrationModel.Password" InputType="password" />
                        </div>

                        <button type="submit" class="btn btn-primary w-100">Register</button>
                    </EditForm>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private RegistrationModel registrationModel = new RegistrationModel();

    private void HandleRegistration()
    {
        Console.WriteLine($"Registered: {registrationModel.Name} - {registrationModel.Email}");
    }

    private class RegistrationModel
    {
        [Required]
        [Display(Name = "Full Name")]
        public string FullName { get; set; } = "";

        [Required(ErrorMessage = "Name is required.")]
        public string Name { get; set; }

        [Required(ErrorMessage = "Email is required.")]
        [EmailAddress(ErrorMessage = "Invalid email address.")]
        public string Email { get; set; }

        [Required(ErrorMessage = "Password is required.")]
        [MinLength(6, ErrorMessage = "Password must be at least 6 characters.")]
        public string Password { get; set; }
    }
}
