@page "/users/delete"
@using Microsoft.EntityFrameworkCore
@using EventRegistrationSystem.Domain
@inject IDbContextFactory<EventRegistrationSystem.Data.EventRegistrationSystemContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Delete</PageTitle>

<h1>Delete</h1>

<p>Are you sure you want to delete this?</p>
<div>
    <h2>Users</h2>
    <hr />
    @if (users is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">Name</dt>
            <dd class="col-sm-10">@users.Name</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Email</dt>
            <dd class="col-sm-10">@users.Email</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Password</dt>
            <dd class="col-sm-10">@users.Password</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">PhoneNumber</dt>
            <dd class="col-sm-10">@users.PhoneNumber</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Role</dt>
            <dd class="col-sm-10">@users.Role</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Preferences</dt>
            <dd class="col-sm-10">@users.Preferences</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">DateCreated</dt>
            <dd class="col-sm-10">@users.DateCreated</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">DateUpdated</dt>
            <dd class="col-sm-10">@users.DateUpdated</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">CreatedBy</dt>
            <dd class="col-sm-10">@users.CreatedBy</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">UpdatedBy</dt>
            <dd class="col-sm-10">@users.UpdatedBy</dd>
        </dl>
        <EditForm method="post" Model="users" OnValidSubmit="DeleteUsers" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(users is null)">Delete</button> |
            <a href="/users">Back to List</a>
        </EditForm>
    }
</div>

@code {
    private Users? users;

    [SupplyParameterFromQuery]
    private int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        users = await context.Users.FirstOrDefaultAsync(m => m.Id == Id);

        if (users is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    private async Task DeleteUsers()
    {
        using var context = DbFactory.CreateDbContext();
        context.Users.Remove(users!);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/users");
    }
}
